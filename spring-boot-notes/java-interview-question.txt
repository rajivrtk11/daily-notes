1. what is the pillar of oops concept.
2. Where did you use this concepts in your project.
3. Explain Exception hierarchy in inheritance.
4. Parent child override scenario.
5. Can we override static and private method 
6. what is the difference of java 7 and java 8 interface
7. what is final, finally and finalize
8. what is equals and hashcode method and its contract.
9. what is Exception and its hierarchy.
10. why checked Exception also called as compile time exception, is it occurs in compile time
11. How to write custom exception
12. Throw and throws exception.
13. Exception tricky programming question (Exception order)
14. try, catch, finally return statement questions.
15. is finally block always executed

// string questions
16. How many way we can create string object?
17. string object creation scenario
18. what is scp(string constant pool) and how it works
19. why string is immutable
20. how to use mutable class and what is the difference between string buffer and string builder.
21. how to write your own custom immutable class 
22. Which one is good to stroe password in java String or char[] and why ?

23. what is marker interface(tagging interface) ? Can we create our own marker interface 

// part-2
1. What all collection you used in your project.
2. What is the difference between list and set ?
3. What is the difference between ArrayList and Linkedlist?
4. List object creation scenario
ArrayList arrayList = new ArrayList<String>();
List<String> list = new ArrayList<>();
5. Declaring a List field with the final keyword?
6. How can i write custom arrayList where i don't want to allow duplicate ?
7. Why Set doesn't allow duplicate element ?
8. What is the difference between Comparable and Comparator ?
9. Multi Comparing using Comparator scenario. eg. id is same, compare on the basis of name.
10. What is the difference between fail fast and fail safe iterator.
11. What is the need of ConcurrentHashMap and How it is different from Hashmap ?
12. If we have Hashtable which is already synchronized then why we need ConcurrentHashMap.
13. We can synchronize a Hashmap using collections then why can't we use that instead of using ConcurrentHashMap
14. How Hashmap internally works(imp)
15. If key is null in HashMap then where that entry will store in map.
16. Map enhancement in java 8.
17. How TreeMap internally works. 
